{"version":3,"file":"static/js/311.5bd4c62d.chunk.js","mappings":"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","sources":["webpack://yedyni-platform-client/./src/components/Course/Course.module.css?2669","components/Course/Course.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"courseContainer\":\"Course_courseContainer__B2NQO\",\"courseTitle\":\"Course_courseTitle__nV9hp\",\"courseWave\":\"Course_courseWave__nkVJ9\",\"currentWave\":\"Course_currentWave__9VfcZ\",\"numberWave\":\"Course_numberWave__Fn9Lg\",\"courseBtn\":\"Course_courseBtn__vXQ9y\",\"courseWrapper\":\"Course_courseWrapper__nWZvi\",\"courseList\":\"Course_courseList__+wfWd\",\"link\":\"Course_link__RWkUM\",\"error\":\"Course_error__0n4-7\",\"wrapperFrame\":\"Course_wrapperFrame__y9jsA\"};","import { Suspense, useEffect } from 'react';\r\nimport { Link, useParams, Outlet } from 'react-router-dom';\r\nimport courses from \"../courses.json\";\r\nimport css from './Course.module.css';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getExercise } from 'redux/exercises/operations';\r\nimport { getDifferenceInDays } from 'service/handleDate';\r\nimport { changeLesson } from 'redux/exercises/lessonSlice';\r\n\r\nexport default function Course () {\r\n    const {courseId} = useParams();\r\n    const currentCourse = courses.find(course => course.id === courseId);\r\n    const difference = getDifferenceInDays(currentCourse.start);\r\n    const initialLesson = difference > 0 && difference <= 27 ?\r\n        currentCourse.lessons[difference] : currentCourse.lessons[0];\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(changeLesson(initialLesson));\r\n        dispatch(getExercise({courseId, lessonId: initialLesson.day}));      \r\n    }, [dispatch, courseId, initialLesson]);\r\n\r\n    if (!currentCourse) {\r\n        return <div>Курс не знайдено</div>;\r\n    }\r\n    \r\n    return (\r\n        <div className={css.courseContainer}>\r\n            <h2 className={css.courseTitle}>{currentCourse.title}</h2>\r\n            <ul className={css.courseWave}>\r\n                <li className={css.currentWave}>\r\n                <span className={css.numberWave}>{currentCourse.wave}</span> хвиля\r\n                </li>\r\n                <li className={css.currentWave}>\r\n                Старт: {currentCourse.start}\r\n                </li>\r\n                <li>\r\n                    <Link\r\n                        to={`${currentCourse.canal}`}\r\n                        target='blank' \r\n                        className={css.courseBtn}\r\n                    >\r\n                        Канал\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link\r\n                        to={`${currentCourse.chat}`}\r\n                        target='blank' \r\n                        className={css.courseBtn}\r\n                    >\r\n                        Чат\r\n                    </Link>\r\n                </li>\r\n            </ul>                \r\n            <div className={css.courseWrapper}>\r\n                <ul className={css.courseList}>\r\n                    {currentCourse.lessons.slice(0,7).map(\r\n                        lesson => (\r\n                        <li key={lesson.day}>\r\n                            <Link\r\n                                onClick={() => {\r\n                                    dispatch(changeLesson(lesson));\r\n                                    dispatch(getExercise({courseId, lessonId: lesson.day}))\r\n                                }}\r\n                                to={`${lesson.day}`}\r\n                                className={css.link}\r\n                            >\r\n                                День {lesson.day}. {lesson.theme}\r\n                            </Link>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n                <ul className={css.courseList}>\r\n                    {currentCourse.lessons.slice(7,14).map(\r\n                        lesson => (\r\n                        <li key={lesson.day}>\r\n                            <Link\r\n                                onClick={() => {\r\n                                    dispatch(changeLesson(lesson));\r\n                                    dispatch(getExercise({courseId, lessonId: lesson.day}))\r\n                                }}\r\n                                to={`${lesson.day}`}\r\n                                className={css.link}\r\n                            >\r\n                                День {lesson.day}. {lesson.theme}\r\n                            </Link>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n                <ul className={css.courseList}>\r\n                    {currentCourse.lessons.slice(14,21).map(\r\n                        lesson => (\r\n                        <li key={lesson.day}>\r\n                            <Link\r\n                                onClick={() => {\r\n                                    dispatch(changeLesson(lesson));\r\n                                    dispatch(getExercise({courseId, lessonId: lesson.day}))\r\n                                }}\r\n                                to={`${lesson.day}`}\r\n                                className={css.link}\r\n                            >\r\n                                День {lesson.day}. {lesson.theme}\r\n                            </Link>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n                <ul className={css.courseList}>\r\n                    {currentCourse.lessons.slice(21,28).map(\r\n                        lesson => (\r\n                        <li key={lesson.day}>\r\n                            <Link\r\n                                onClick={() => {\r\n                                    dispatch(changeLesson(lesson));\r\n                                    dispatch(getExercise({courseId, lessonId: lesson.day}))\r\n                                }}\r\n                                to={`${lesson.day}`}\r\n                                className={css.link}\r\n                            >\r\n                                День {lesson.day}. {lesson.theme}\r\n                            </Link>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n            <div className={css.wrapperFrame}>\r\n                <Suspense fallback={null}>\r\n                    <Outlet />\r\n                </Suspense>\r\n            </div>\r\n        </div>\r\n    )\r\n}"],"names":["Course","courseId","useParams","currentCourse","courses","find","course","id","difference","getDifferenceInDays","start","initialLesson","lessons","dispatch","useDispatch","useEffect","changeLesson","getExercise","lessonId","day","_jsxs","className","css","children","_jsx","title","wave","Link","to","concat","canal","target","chat","slice","map","lesson","onClick","theme","Suspense","fallback","Outlet"],"sourceRoot":""}