{"version":3,"file":"static/js/940.cbf02b85.chunk.js","mappings":"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","sources":["webpack://yedyni-platform-client/./src/components/Diary/Diary.module.css?99ff","components/Diary/Diary.jsx","redux/exercises/selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Diary_form__Azwp1\",\"groupInput\":\"Diary_groupInput__XnK5Z\",\"groupInputDate\":\"Diary_groupInputDate__jAIKc\",\"inputDate\":\"Diary_inputDate__zlnnN\",\"groupInputTest\":\"Diary_groupInputTest__ykebp\",\"inputTest\":\"Diary_inputTest__lMQ1L\",\"groupTextarea\":\"Diary_groupTextarea__lN+DR\",\"label\":\"Diary_label__vIlbK\",\"textarea\":\"Diary_textarea__wT1zL\",\"wrapperBtn\":\"Diary_wrapperBtn__EKuZ8\",\"primaryBtn\":\"Diary_primaryBtn__nsAvP\"};","import { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport DatePicker, {registerLocale} from 'react-datepicker';\nimport uk from 'date-fns/locale/uk';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { addExercise, updateExercise } from 'redux/exercises/operations';\nimport { selectCurrentLesson, selectExercise } from 'redux/exercises/selectors';\nimport css from './Diary.module.css';\n\nexport default function Diary ({courseId, lessonId}) {\n    registerLocale('uk', uk)\n  const dispatch = useDispatch();  \n\n  const {homework} = useSelector(selectExercise);\n  const currentLesson = useSelector(selectCurrentLesson);\n  const [textInput, setTextInput] = useState(homework);\n  const [isActiveTextarea, setIsActiveTextarea] = useState(false);\n  const [dateInput, setDateInput] = useState('');\n  const [testInput, setTestInput] = useState('');\n\n  const handleDateInputChange = date => {\n    setDateInput(date);\n  };\n\n  const handleTestInputChange = (e) => {\n    setTestInput(e.target.value);\n  };\n\n  const handleTextChange = (e) => {\n    setTextInput(e.target.value);\n    setIsActiveTextarea(true);\n  };\n\n  const isTextValid = (text) => {\n    if (text.length > 500) {\n      alert('Поле повинно містити не більше 500 символів.');\n      return false;\n    }\n    return true;\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    \n    const formData = new FormData();\n    formData.append('courseId', courseId);\n    formData.append('lessonId', lessonId);\n\n    if (!isTextValid(textInput)) {\n      return;\n    }\n\n    formData.append('homework', textInput);\n  \n    if (homework === '') {\n      dispatch(\n        addExercise(formData)\n      );\n    } else {\n      dispatch(\n        updateExercise(formData)\n      );\n    }\n    setIsActiveTextarea(false);\n  };\n\n  useEffect(() => {\n    // Функція-обробник для обробки події beforeunload\n    const handleBeforeUnload = (e) => {\n      // Перевірка, чи активне текстове поле, і якщо так, попередження користувача\n      if (isActiveTextarea) {\n        e.preventDefault();\n        e.returnValue = '';\n      }\n    };\n\n    // Додавання обробника події beforeunload при монтуванні компонента\n    window.addEventListener('beforeunload', handleBeforeUnload);\n\n    // Видалення обробника події beforeunload при розмонтуванні компонента\n    return () => {\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n    };\n  }, [isActiveTextarea]);\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit} className={css.form}>\n        <Form.Group \n            controlId=\"formInput\"\n            className={css.groupInput} \n            >\n        <Form.Group \n            controlId=\"formDate\"\n            className={css.groupInputDate} \n            >\n            <Form.Label className={css.label}>\n                Дата:\n            </Form.Label>\n            <DatePicker \n                className={css.inputDate}\n                selected={dateInput}\n                onChange={handleDateInputChange}\n                dateFormat=\"dd-MM-yyyy\"\n                maxDate={new Date()}\n                locale=\"uk\" \n            />\n        </Form.Group>\n        <Form.Group \n            controlId=\"formTest\"\n            className={css.groupInputTest} \n            >\n            <Form.Label className={css.label}>\n                Тест:\n            </Form.Label>\n            <Form.Control \n            as=\"input\"   \n            value={testInput} \n            onChange={handleTestInputChange}\n            className={css.inputTest} \n            />\n            <Form.Label className={css.label}>\n                з 10\n            </Form.Label>\n        </Form.Group>\n        </Form.Group>\n        <Form.Group \n          controlId=\"formText\"\n          className={css.groupTextarea} \n        >\n          <Form.Label className={css.label}>\n            Що я вмію?\n          </Form.Label>\n          <Form.Control \n            as=\"textarea\" rows={4} \n            placeholder=\"Введіть текст\" \n            value={textInput} \n            onChange={handleTextChange}\n            className={css.textarea} \n          />\n        </Form.Group>\n        <Form.Group \n          controlId=\"formText\"\n          className={css.groupTextarea} \n        >\n          <Form.Label className={css.label}>\n            Над чим варто попрацювати?\n          </Form.Label>\n          <Form.Control \n            as=\"textarea\" rows={4} \n            placeholder=\"Введіть текст\" \n            value={textInput} \n            onChange={handleTextChange}\n            className={css.textarea} \n          />\n        </Form.Group>\n        <div className={css.wrapperBtn}>\n          <Button \n            variant=\"primary\"\n            type=\"submit\"\n            className={css.primaryBtn}\n          >\n            Зберегти\n          </Button>\n        </div>        \n      </Form>\n      <img src={currentLesson.diary} alt='Щоденник' width=\"100%\" />\n    </>\n  ) \n};","export const selectExercise = state => state.exercises.exercise;\n\nexport const selectIsLoading = state => state.exercises.isLoading;\n\nexport const selectError = state => state.exercises.error;\n\nexport const selectCurrentLesson = state => state.lesson.currentLesson;"],"names":["Diary","_ref","courseId","lessonId","registerLocale","uk","dispatch","useDispatch","homework","useSelector","selectExercise","currentLesson","selectCurrentLesson","_useState","useState","_useState2","_slicedToArray","textInput","setTextInput","_useState3","_useState4","isActiveTextarea","setIsActiveTextarea","_useState5","_useState6","dateInput","setDateInput","_useState7","_useState8","testInput","setTestInput","handleTextChange","e","target","value","useEffect","handleBeforeUnload","preventDefault","returnValue","window","addEventListener","removeEventListener","_jsxs","_Fragment","children","Form","onSubmit","formData","FormData","append","length","alert","addExercise","updateExercise","className","css","controlId","_jsx","DatePicker","selected","onChange","date","dateFormat","maxDate","Date","locale","as","rows","placeholder","Button","variant","type","src","diary","alt","width","state","exercises","exercise","lesson"],"sourceRoot":""}